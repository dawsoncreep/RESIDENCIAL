@model Model.Custom.EventForGridView

@{
    ViewBag.Title = Resources.Event_Edit_Title;
    Layout = "~/Areas/Colonial/Views/Shared/_ColonialMenu.cshtml";
}


@using (Html.BeginForm("Edit", "Event", new { Area = "Colonial" }, FormMethod.Post, new { }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>@Resources.Event_Edit_Title</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateStart, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateStart, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateStart, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateEnd, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateEnd, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateEnd, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.DropDownListFor(model => model.LocationId,
                     Model.lstLocation.Select(s => new SelectListItem { Text = s.Name, Value = s.Id.ToString() }).ToList(),
                     new { @class = "form-control btn btn-default dropdown-toggle", type = "button" })

            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EventType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.DropDownListFor(model => model.EventTypeId,
                     Model.lstEventType.Select(s => new SelectListItem { Text = s.Description, Value = s.Id.ToString() }).ToList(),
                     new { @class = "form-control btn btn-default dropdown-toggle", type = "button" })

            @Html.ValidationMessageFor(model => model.EventType, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value=@Resources.Save class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink(Resources.BacktoList, "Index", "Event", new { Area = "Colonial" }, new { @class = "btn btn-default" })
</div>
